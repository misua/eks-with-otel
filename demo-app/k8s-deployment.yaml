apiVersion: apps/v1
kind: Deployment
metadata:
  name: eks-otel-demo
  namespace: default
  labels:
    app: eks-otel-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: eks-otel-demo
  template:
    metadata:
      labels:
        app: eks-otel-demo
    spec:
      containers:
      - name: demo-app
        image: your-registry/eks-otel-demo:latest  # Update this with your container registry
        ports:
        - containerPort: 8080
        env:
        # This is the KEY difference - uses Kubernetes service DNS
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector.tracing.svc.cluster.local:4318"
        - name: PORT
          value: "8080"
        - name: OTEL_SERVICE_NAME
          value: "eks-otel-demo"
        - name: OTEL_SERVICE_VERSION
          value: "1.0.0"
        # Add Kubernetes metadata as resource attributes
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "k8s.namespace.name=$(NAMESPACE),k8s.pod.name=$(POD_NAME),k8s.node.name=$(NODE_NAME)"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: eks-otel-demo-service
  namespace: default
  labels:
    app: eks-otel-demo
spec:
  selector:
    app: eks-otel-demo
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
# Optional: Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eks-otel-demo-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: demo.your-domain.com  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: eks-otel-demo-service
            port:
              number: 80
